/* https://www.youtube.com/watch?v=c13gpBrnGEw */
// Video above offers detailed explanation on how content grid works.
.content-grid {
  --padding-inline: 1rem;
  --content-max-width: calc(100% - (var(--global-margin)*2));
  --breakout-max-width: calc(100% - var(--global-margin));

  --breakout-size: calc(
    (var(--breakout-max-width) - var(--content-max-width)) / 2
  );

  display: grid;
  grid-template-columns:
    [full-width-start] minmax(var(--padding-inline), 1fr)
    [breakout-start] minmax(0, var(--breakout-size))
    [content-start] min(
      100% - (var(--padding-inline) * 2),
      var(--content-max-width)
    )
    [content-end]
    minmax(0, var(--breakout-size)) [breakout-end]
    minmax(var(--padding-inline), 1fr) [full-width-end];
}

.content-grid > :not(.breakout, .full-width),
.full-width > :not(.breakout, .full-width) {
  grid-column: content;
}

.content-grid > .breakout {
  grid-column: breakout;
}

.content-grid > .full-width {
  grid-column: full-width;
}

/* https://www.youtube.com/watch?v=LEkFckg7sfw */
// This video explains how content flex works
.content-flex {
	--total-size: 100%;
	--grower-min-width: 0;
	--giver-width: 0;
	--gap: 0;
	--grower-flex-basis: calc((var(--grower-min-width) - (var(--total-size) - var(--giver-width) - var(--gap))) * 9999);

	display: flex;
	gap: var(--gap);
	flex-wrap: wrap;
}

.content-flex>* {
	flex-grow: 999;
	flex-basis: var(--grower-flex-basis);
}

.content-flex>.giver {
	flex-grow: 1;
	flex-basis: var(--giver-width);
}